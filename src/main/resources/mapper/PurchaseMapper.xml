<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digicap.dcblock.caffeapiserver.store.PurchaseMapper">
    <insert id="insertPurchase" parameterType="com.digicap.dcblock.caffeapiserver.dto.PurchaseDto">
        INSERT INTO purchases (
            count,
            price,
            dc_price,
            name,
            user_record_index,
            category,
            code,
            menu_name_kr,
            opt_size,
            opt_type,
            receipt_id,
            purchase_type,
            email,
            company
        )
        VALUES (
            #{count},
            #{price},
            #{dc_price},
            #{name},
            #{user_record_index},
            #{category},
            #{code},
            #{menu_name_kr},
            #{opt_size},
            #{opt_type},
            #{receipt_id},
            #{purchase_type},
            #{email},
            #{company}
        )
    </insert>
    <select id="updateReceiptCancelStatus" resultType="com.digicap.dcblock.caffeapiserver.dto.PurchaseDto">
        <![CDATA[
        UPDATE
            purchases
        SET
            receipt_status = '1',
            cancel_date = 'now()',
            update_date = 'now()'
        WHERE
            receipt_id = #{receiptId}
        AND
            receipt_status = '0'
        AND
            (SELECT CURRENT_DATE) <= purchase_date
        AND
            purchase_date < (SELECT CURRENT_DATE + 1)
        ]]>
        RETURNING *
    </select>

    <select id="updateReceiptCancelApprovalStatus" resultType="com.digicap.dcblock.caffeapiserver.dto.PurchaseDto">
        <![CDATA[
        UPDATE
            purchases
        SET
            receipt_status = '2',
            canceled_date = 'now()',
            update_date = 'now()'
        WHERE
            receipt_id = #{receiptId}
        AND
            receipt_status = '1'
        AND
            #{from} <= purchase_date
        AND
            purchase_date < #{to}
        ]]>
        RETURNING *
    </select>
    <select id="selectAllByUser" resultType="com.digicap.dcblock.caffeapiserver.dto.PurchaseOldDto">
        <![CDATA[
        SELECT
            code, price, dc_price, opt_type, opt_size, count, menu_name_kr, purchase_type
        FROM
            purchases
        WHERE
            user_record_index = #{userRecordIndex}
        AND
            (receipt_status = '0' OR receipt_status = '1')
        AND
            #{from} <= purchase_date
        AND
            purchase_date <= #{to}
        ]]>
    </select>
    <select id="selectAllCancel" resultType="com.digicap.dcblock.caffeapiserver.dto.PurchaseNewDto">
        SELECT
            count,
            price,
            dc_price,
            name,
            user_record_index,
            code,
            menu_name_kr,
            receipt_status,
            opt_size,
            opt_type,
            update_date,
            cancel_date,
            purchase_date,
            canceled_date,
            index,
            receipt_id,
            purchase_type
        FROM
            purchases
        <![CDATA[
        WHERE
            #{before} <= update_date
        AND
            update_date <= #{after}
        ]]>
        <if test = 'company != null and company != ""'>
        AND
            company = #{company}
        </if>
        AND
            (receipt_status = '1' OR receipt_status = '2')
        ORDER BY
            purchase_date
        DESC
        <if test = 'page > 0'>
        LIMIT
            #{perPage}
        OFFSET
            (#{page} - 1) * #{perPage}
        </if>
    </select>
    <select id="selectByReceiptId" resultType="java.sql.Timestamp">
        <![CDATA[
        SELECT
            update_date
        FROM
            purchases
        WHERE
            receipt_id = #{receiptId}
        AND
            user_record_index = #{userRecordIndex}
        AND
            receipt_status = '0'
        AND
            (SELECT CURRENT_DATE) <= update_date
        AND
            update_date < (SELECT CURRENT_DATE + 1)
        ORDER BY
            update_date
        DESC
        ]]>
    </select>
    <select id="existReceiptId" resultType="boolean">
        <![CDATA[
        SELECT EXISTS(
            SELECT
                1
            FROM
                purchases
            WHERE
                receipt_id = #{receiptId}
            AND
                #{from} <= purchase_date
            AND
                purchase_date < #{to}
        )
        ]]>
    </select>
    <select id="selectAllUser" resultType="com.digicap.dcblock.caffeapiserver.dto.PurchaseNewDto">
        SELECT
            count,
            price,
            dc_price,
            name,
            user_record_index,
            code,
            menu_name_kr,
            receipt_status,
            opt_size,
            opt_type,
            update_date,
            cancel_date,
            purchase_date,
            canceled_date,
            index,
            receipt_id,
            email,
            company,
            purchase_type
        FROM
            purchases
        <![CDATA[
        WHERE
            #{before} <= update_date
        AND
            update_date <= #{after}
        ]]>
        <if test = "userRecordIndex > 0">
        AND
            user_record_index = #{userRecordIndex}
        </if>
        <if test = 'company != null and company != ""'>
        AND
            company = #{company}
        </if>
        ORDER BY
            purchase_date
        DESC
    </select>

    <select id="selectSearchBy" resultType="com.digicap.dcblock.caffeapiserver.dto.PurchaseVo">
        SELECT
            *
        FROM
            purchases
        <![CDATA[
        WHERE
            #{before} <= update_date
        AND
            update_date <= #{after}
        ]]>
        <if test = "userRecordIndex > 0">
        AND
            user_record_index = #{userRecordIndex}
        </if>
        <if test = 'company != null and company != ""'>
        AND
            company = #{company}
        </if>
        <if test="purchaseType > -1">
        AND
            purchase_type = #{purchaseType}
        </if>
        ORDER BY
            purchase_date
        DESC
        <if test = 'page > 0'>
        LIMIT
            #{perPage}
        OFFSET
            (#{page} - 1) * #{perPage}
        </if>
    </select>

    <select id="selectCount" resultType="int">
        SELECT
            COUNT(*)
        FROM
            purchases
        <![CDATA[
        WHERE
            #{before} <= update_date
        AND
            update_date <= #{after}
        ]]>
        <if test = "userRecordIndex > 0">
        AND
            user_record_index = #{userRecordIndex}
        </if>
        <if test = 'company != null and company != ""'>
        AND
            company = #{company}
        </if>
        <if test="purchaseType > -1">
        AND
            purchase_type = #{purchaseType}
        </if>
    </select>

    <select id="selectAllCancelCount" resultType="int">
        SELECT
            COUNT(*)
        FROM
            purchases
        <![CDATA[
        WHERE
            #{before} <= update_date
        AND
            update_date <= #{after}
        ]]>
        AND
            (receipt_status = '1' OR receipt_status = '2')
        <if test = 'company != null and company != ""'>
        AND
            company = #{company}
        </if>
    </select>

    <select id="selectBalanceAccounts" resultType="hashmap">
        SELECT
            user_record_index AS index,
            SUM(price * count) AS balance,
            SUM(dc_price * count) AS dcbalance
        FROM
            purchases
        WHERE
            1=1
        AND
        <![CDATA[
            #{before} <= purchase_date
        AND
            purchase_date <= #{after}
        ]]>
        AND
            (purchase_type = 0 OR purchase_type = 2)
        AND
            (receipt_status = 0 OR receipt_status = 1)
        AND
            user_record_index = #{userRecordIndex}
        GROUP BY
            user_record_index
        ORDER BY
            user_record_index DESC
    </select>

    <select id="selectSettlesAccount" resultType="hashmap">
        SELECT
            user_record_index, SUM((price * count) - (dc_price * count))
        FROM
            purchases
        WHERE
            company = 'digicap'
        AND
        <![CDATA[
            (SELECT ((SELECT date_trunc('month', timestamp 'today')) - interval '1 month')) <= purchase_date
        AND
            purchase_date < (SELECT date_trunc('month', timestamp 'today'))
        ]]>
        AND
            (purchase_type = 0 OR purchase_type = 2)
        AND
            (receipt_status = 0 OR receipt_status = 1)
        GROUP BY
            user_record_index
        HAVING BY
            SUM((price * count) - (dc_price * count))
        ORDER BY
            user_record_index DESC
    </select>
</mapper>